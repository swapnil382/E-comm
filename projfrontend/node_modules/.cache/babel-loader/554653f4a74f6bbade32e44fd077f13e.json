{"ast":null,"code":"var _jsxFileName = \"C:\\\\Swapnil\\\\E-commerce_react\\\\projfrontend\\\\src\\\\admin\\\\UpdateCategory.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAutheticated } from \"../auth/helper\";\nimport Base from \"../core/Base\";\nimport { getCategoryById, updateCategory } from \"./helper/adminapicall\";\n\nconst UpdateCategory = ({\n  match\n}) => {\n  const {\n    user,\n    token\n  } = isAutheticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    loading: \"\",\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n  const {\n    name,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = categoryId => {\n    //   console.log(categoryId)\n    getCategoryById(categoryId).then(data => {\n      // console.log(\"DATA\",data)\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          formData: new FormData()\n        });\n      }\n    });\n  }; //   console.log(\"DATA\",values)\n\n\n  useEffect(() => {\n    preload(match.params.categoryId);\n    console.log(match);\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: \"\",\n      loading: true\n    });\n    updateCategory(match.params.categoryId, user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        setValues({ ...values,\n          name: \"\",\n          loading: false,\n          createdProduct: data.name\n        });\n      }\n\n      console.log(\"values\", values);\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = event.target.value;\n    formData.set(name, value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const UpdateCategoryfrom = () => {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Update the Category\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control my-3\",\n      onChange: handleChange(\"name\"),\n      value: name,\n      autoFocus: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: onSubmit,\n      className: \"btn btn-outline-info mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Update Category\"));\n  };\n\n  return React.createElement(Base, {\n    title: \"Update Category here!!!!\",\n    description: \"Welcome to Update Category\",\n    className: \"container bg-info p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"btn btn-md btn-dark mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Admin Home\"), React.createElement(\"div\", {\n    className: \"row bg-dark text-white rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, UpdateCategoryfrom())));\n};\n\nexport default UpdateCategory;","map":{"version":3,"sources":["C:/Swapnil/E-commerce_react/projfrontend/src/admin/UpdateCategory.js"],"names":["React","useState","useEffect","Link","isAutheticated","Base","getCategoryById","updateCategory","UpdateCategory","match","user","token","values","setValues","name","loading","error","createdProduct","getaRedirect","formData","preload","categoryId","then","data","FormData","params","console","log","onSubmit","event","preventDefault","_id","handleChange","value","target","set","UpdateCategoryfrom"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport Base from \"../core/Base\";\r\nimport { getCategoryById,updateCategory } from \"./helper/adminapicall\";\r\n\r\n\r\nconst UpdateCategory = ({match}) => {\r\n\r\n    const  {user, token} = isAutheticated();\r\n\r\n    const [values, setValues] = useState ({\r\n        name:\"\",\r\n        loading:\"\",\r\n        error:\"\",\r\n        createdProduct:\"\",\r\n        getaRedirect:false,\r\n        formData:\"\"\r\n    })\r\n\r\n    const {name,loading,error,createdProduct,getaRedirect,formData} = values\r\n\r\n    const preload = categoryId => {\r\n        //   console.log(categoryId)\r\n        getCategoryById(categoryId).then(data => {\r\n            // console.log(\"DATA\",data)\r\n            if (data.error){\r\n               setValues({ ...values,error:data.error})\r\n            }else{\r\n              setValues({ ...values,\r\n             name:data.name,\r\n             formData:new FormData()\r\n             })\r\n   \r\n            }\r\n          })\r\n        }\r\n\r\n   \r\n\r\n\r\n     //   console.log(\"DATA\",values)\r\n        useEffect(() => {\r\n            preload(match.params.categoryId)\r\n            console.log(match)\r\n          },[])\r\n\r\n          const onSubmit = (event) => {\r\n            event.preventDefault()\r\n            setValues({...values,error:\"\",loading:true})\r\n            updateCategory(match.params.categoryId,user._id,token,formData).then(data => {\r\n              if(data.error){\r\n                setValues({...values,error:data.error})\r\n              }else{\r\n                setValues({\r\n                  ...values,\r\n                  name:\"\",\r\n                  loading:false,\r\n                  createdProduct:data.name\r\n                })\r\n                }\r\n                console.log(\"values\",values)\r\n            })   \r\n           \r\n        }\r\n      \r\n\r\n\r\n        const handleChange = name => event =>  {\r\n            const value = event.target.value\r\n            formData.set(name,value)\r\n            setValues({...values,[name]:value})\r\n        }\r\n\r\n   const  UpdateCategoryfrom = () =>{\r\n       return(\r\n        <form>\r\n        <div className=\"from-group\">\r\n          <p className=\"lead\">Update the Category</p>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control my-3\"\r\n            onChange={handleChange(\"name\")}\r\n            value={name}  \r\n            autoFocus\r\n            required\r\n          />\r\n        </div>\r\n        <button onClick={onSubmit}  className=\"btn btn-outline-info mb-2\">\r\n          Update Category\r\n        </button>\r\n      </form>\r\n       )\r\n     \r\n    }\r\n\r\n  return (\r\n    <Base title=\"Update Category here!!!!\" description=\"Welcome to Update Category\" className=\"container bg-info p-4\">\r\n    <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">Admin Home</Link>\r\n    <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n           {UpdateCategoryfrom()}\r\n        </div>\r\n    </div>\r\n</Base>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n"]},"metadata":{},"sourceType":"module"}
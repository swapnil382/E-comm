{"ast":null,"code":"var _jsxFileName = \"C:\\\\Swapnil\\\\E-commerce_react\\\\projfrontend\\\\src\\\\core\\\\StripeCheckout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAutheticated() && isAutheticated().token;\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"strip checkout \", getFinalAmount()));\n};\n\nexport default StripeCheckout;","map":{"version":3,"sources":["C:/Swapnil/E-commerce_react/projfrontend/src/core/StripeCheckout.js"],"names":["React","useState","useEffect","Link","isAutheticated","cartEmpty","loadcart","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA3B;AAA8BC,EAAAA,MAAM,GAAEC;AAAtC,CAAD,KAAsD;AAErE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC7Bc,IAAAA,OAAO,EAAC,KADqB;AAE7BC,IAAAA,OAAO,EAAC,KAFqB;AAG7BC,IAAAA,KAAK,EAAC,EAHuB;AAI7BC,IAAAA,OAAO,EAAC;AAJqB,GAAD,CAAhC;AAOA,QAAMC,KAAK,GAAGf,cAAc,MAAMA,cAAc,GAAGe,KAAnD;;AACA,QAAMC,MAAM,GAAGhB,cAAc,MAAMA,cAAc,GAAGiB,IAAjB,CAAsBC,GAAzD;;AAEA,QAAMC,cAAc,GAAG,MAAK;AACxB,QAAIC,MAAM,GAAG,CAAb;AACAhB,IAAAA,QAAQ,CAACiB,GAAT,CAAaC,CAAC,IAAI;AACdF,MAAAA,MAAM,GAAGA,MAAM,GAAGE,CAAC,CAACC,KAApB;AACH,KAFD;AAGA,WAAOH,MAAP;AACH,GAND;;AAQJ,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4CD,cAAc,EAA1D,CADJ,CADJ;AAKH,CAzBD;;AA2BA,eAAehB,cAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { isAutheticated } from \"../auth/helper\"\r\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\"\r\n\r\n\r\nconst StripeCheckout = ({products,setReload = f => f, reload= undefined}) => {\r\n\r\n        const [data, setData] = useState({\r\n            loading:false,\r\n            success:false,\r\n            error:\"\",\r\n            address:\"\"\r\n        })\r\n\r\n        const token = isAutheticated() && isAutheticated().token\r\n        const userId = isAutheticated() && isAutheticated().user._id\r\n\r\n        const getFinalAmount = () =>{\r\n            let amount = 0;\r\n            products.map(p => {\r\n                amount = amount + p.price\r\n            })\r\n            return amount\r\n        }\r\n\r\n    return(\r\n        <div>\r\n            <h1 className=\"text-white\" >strip checkout {getFinalAmount()}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StripeCheckout"]},"metadata":{},"sourceType":"module"}
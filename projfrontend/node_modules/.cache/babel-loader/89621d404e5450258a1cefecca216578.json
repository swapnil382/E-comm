{"ast":null,"code":"var _jsxFileName = \"C:\\\\Swapnil\\\\E-commerce_react\\\\projfrontend\\\\src\\\\core\\\\Paypalcheckout.js\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { getmeToken, processPayment } from \"./helper/PaypalHelper\";\n\nconst PayPalcheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const token = isAutheticated() && isAutheticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION\", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken; //console.log(\"clientToken\",setInfo)\n\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, info.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(DropIn, {\n      options: {\n        authorization: info.clientToken\n      },\n      onInstance: instance => info.instance = instance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-block btn-outline-success\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Buy\")) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Please login or add something to cart\"));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"paypal\"), showbtdropIn());\n};\n\nexport default PayPalcheckout;","map":{"version":3,"sources":["C:/Swapnil/E-commerce_react/projfrontend/src/core/Paypalcheckout.js"],"names":["DropIn","React","useState","useEffect","Link","isAutheticated","cartEmpty","loadcart","createOrder","getmeToken","processPayment","PayPalcheckout","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","console","log","showbtdropIn","length","authorization"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,uBAA3C;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA3B;AAA6BC,EAAAA,MAAM,GAAGC;AAAtC,CAAD,KAAsD;AAEzE,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBhB,QAAQ,CAAC;AAC5BiB,IAAAA,OAAO,EAAC,KADoB;AAE5BC,IAAAA,OAAO,EAAC,KAFoB;AAG5BC,IAAAA,WAAW,EAAC,IAHgB;AAI5BC,IAAAA,KAAK,EAAC,EAJsB;AAK5BC,IAAAA,QAAQ,EAAC;AALmB,GAAD,CAA/B;;AAQA,QAAMC,MAAM,GAAGnB,cAAc,MAAOA,cAAc,GAAGoB,IAAjB,CAAsBC,GAA1D;;AACA,QAAMC,KAAK,GAAGtB,cAAc,MAAMA,cAAc,GAAGsB,KAAnD;;AAGA,QAAMC,QAAQ,GAAG,CAACJ,MAAD,EAAQG,KAAR,KAAkB;AAE/BlB,IAAAA,UAAU,CAACe,MAAD,EAAQG,KAAR,CAAV,CAAyBE,IAAzB,CAA8BZ,IAAI,IAAI;AAClCa,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Bd,IAA1B;;AACA,UAAGA,IAAI,CAACK,KAAR,EAAc;AACVJ,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAASK,UAAAA,KAAK,EAACL,IAAI,CAACK;AAApB,SAAD,CAAP;AACH,OAFD,MAEK;AACD,cAAMD,WAAW,GAAGJ,IAAI,CAACI,WAAzB,CADC,CAED;;AACAH,QAAAA,OAAO,CAAC;AAACG,UAAAA;AAAD,SAAD,CAAP;AACH;AACJ,KATD;AAUH,GAZD;;AAeA,QAAMW,YAAY,GAAG,MAAM;AACvB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,IAAI,CAACI,WAAL,KAAoB,IAApB,IAA4BT,QAAQ,CAACqB,MAAT,GAAkB,CAA9C,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAACjB,IAAI,CAACI;AAArB,OADb;AAEI,MAAA,UAAU,EAAEE,QAAQ,IAAKN,IAAI,CAACM,QAAL,GAAgBA,QAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI;AAAQ,MAAA,SAAS,EAAC,mCAAlB;AAAsD,MAAA,OAAO,EAAE,MAAM,CAAE,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADH,GAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CATT,CADJ;AAaH,GAdD;;AAiBApB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,QAAQ,CAACJ,MAAD,EAAQG,KAAR,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAECK,YAAY,EAFb,CADJ;AAOH,CAzDD;;AA2DA,eAAerB,cAAf","sourcesContent":["import DropIn from \"braintree-web-drop-in-react\"\r\nimport React,{useState,useEffect} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { isAutheticated } from \"../auth/helper\"\r\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\"\r\nimport { createOrder } from \"./helper/OrderHelper\"\r\nimport { getmeToken, processPayment } from \"./helper/PaypalHelper\"\r\n\r\n\r\nconst PayPalcheckout = ({products,setReload = f => f,reload = undefined}) => {\r\n    \r\n    const [info,setInfo] = useState({\r\n        loading:false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:\"\",\r\n        instance:{}\r\n    })\r\n\r\n    const userId = isAutheticated() &&  isAutheticated().user._id\r\n    const token = isAutheticated() && isAutheticated().token\r\n    \r\n     \r\n    const getToken = (userId,token) => {\r\n      \r\n        getmeToken(userId,token).then(info => {\r\n            console.log(\"INFORMATION\",info)\r\n            if(info.error){\r\n                setInfo({...info,error:info.error})\r\n            }else{\r\n                const clientToken = info.clientToken\r\n                //console.log(\"clientToken\",setInfo)\r\n                setInfo({clientToken})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const showbtdropIn = () => {\r\n        return(\r\n            <div>\r\n                {info.clientToken !==null && products.length > 0 ? (\r\n                    <div>\r\n                        <DropIn \r\n                            options={{ authorization:info.clientToken}}\r\n                            onInstance={instance => (info.instance = instance)}\r\n                        />\r\n                        <button className=\"btn btn-block btn-outline-success\" onClick={() => {}}>Buy</button>\r\n                    </div>\r\n                ) : (<h3>Please login or add something to cart</h3>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getToken(userId,token)\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n          <h3>paypal</h3>\r\n        {showbtdropIn()}\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default PayPalcheckout"]},"metadata":{},"sourceType":"module"}
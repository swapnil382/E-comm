{"ast":null,"code":"var _jsxFileName = \"C:\\\\Swapnil\\\\E-commerce_react\\\\projfrontend\\\\src\\\\core\\\\StripeCheckout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\";\nimport StripCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/OrderHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAutheticated() && isAutheticated().token;\n\n  const userId = isAutheticated() && isAutheticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then(response => {\n      console.log(response);\n    }).catch(error => console.log(error));\n    createOrder(userId, token, response);\n    cartEmpty(() => {// console.log(\"cart crash\")\n    });\n    setReload(!reload);\n  };\n\n  const showStripeButton = () => {\n    return isAutheticated() ? React.createElement(StripCheckoutButton, {\n      stripeKey: \"pk_test_51IYqE7SBCrwNWs5w4KuyJubAScnJEy1qk9UCaY0trIvuQNyyDgih1p4pQ4Enuk8YahMxRhyU2PYBAoTASllknsPK00ZpLiynkX\",\n      token: makePayment,\n      amount: getFinalAmount() * 100,\n      name: \"Buy Product\",\n      shippingAddress: true,\n      billingAddress: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      style: {\n        width: \"205px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Debit / ATM Card\")) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Signin\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Amount Payable \", getFinalAmount()), showStripeButton());\n};\n\nexport default StripeCheckout;","map":{"version":3,"sources":["C:/Swapnil/E-commerce_react/projfrontend/src/core/StripeCheckout.js"],"names":["React","useState","useEffect","Link","isAutheticated","cartEmpty","loadcart","StripCheckoutButton","API","createOrder","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price","makePayment","body","headers","fetch","method","JSON","stringify","then","response","console","log","catch","showStripeButton","width"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { isAutheticated } from \"../auth/helper\"\r\nimport { cartEmpty, loadcart } from \"./helper/CartHelper\"\r\nimport StripCheckoutButton from \"react-stripe-checkout\"\r\nimport { API } from \"../backend\"\r\nimport { createOrder } from \"./helper/OrderHelper\"\r\n\r\n\r\nconst StripeCheckout = ({products,setReload = f => f, reload= undefined}) => {\r\n\r\n        const [data, setData] = useState({\r\n            loading:false,\r\n            success:false,\r\n            error:\"\",\r\n            address:\"\"\r\n        })\r\n\r\n        const token = isAutheticated() && isAutheticated().token\r\n        const userId = isAutheticated() && isAutheticated().user._id\r\n\r\n        const getFinalAmount = () =>{\r\n            let amount = 0;\r\n            products.map(p => {\r\n                amount = amount + p.price;\r\n            })\r\n            return amount\r\n        }\r\n\r\n        const makePayment =(token) => {\r\n            const body ={\r\n                token,\r\n                products\r\n            }\r\n            const headers = {\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n            return fetch(`${API}/stripepayment`,{\r\n                method:\"POST\",\r\n                headers,\r\n                body:JSON.stringify(body)\r\n            }).then(response => {\r\n                console.log(response)\r\n            }).catch(error => console.log(error))\r\n            createOrder(userId,token,response)\r\n            cartEmpty(() => {\r\n                // console.log(\"cart crash\")\r\n            })\r\n            setReload(!reload)\r\n        }\r\n\r\n        const showStripeButton = () => {\r\n            return isAutheticated () ? (\r\n                <StripCheckoutButton\r\n                stripeKey=\"pk_test_51IYqE7SBCrwNWs5w4KuyJubAScnJEy1qk9UCaY0trIvuQNyyDgih1p4pQ4Enuk8YahMxRhyU2PYBAoTASllknsPK00ZpLiynkX\"\r\n                token={makePayment}\r\n                amount={getFinalAmount() * 100}\r\n                name=\"Buy Product\"\r\n                shippingAddress\r\n                billingAddress\r\n                >\r\n                <button className=\"btn btn-warning\" style={{width:\"205px\"}}>Debit / ATM Card</button>\r\n                </StripCheckoutButton>\r\n            ) : (\r\n                <Link to=\"/signin\">\r\n                    <button className=\"btn btn-warning\">Signin</button>\r\n                </Link>\r\n            )\r\n        }\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"text-info\" >Amount Payable {getFinalAmount()}</h3>\r\n            {showStripeButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StripeCheckout"]},"metadata":{},"sourceType":"module"}